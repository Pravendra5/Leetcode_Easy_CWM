**********************************************************************************Python*************************************************************************************

def max_product(nums):
    largest = 0
    sec_largest = 0

    for num in nums:
        if num > largest:
            sec_largest = largest
            largest = num
        else:
            sec_largest = max(sec_largest, num)
    
    return (largest - 1) * (sec_largest - 1)




**********************************************************************************Java*************************************************************************************
class Solution {
    public int maxProduct(int[] nums) {
        int curr_max = nums[0];
        int result = 0;

        for(int i = 1; i < nums.length; i++){
            result = Math.max(result,(curr_max - 1) * (nums[i] - 1));
            curr_max = Math.max(curr_max, nums[i]);
        }
        return result;
    }
}

// second approach

class Solution {
    public int maxProduct(int[] nums) {
        int largest = 0;
        int sec_largest = 0;

        for(int num: nums){
            if(num > largest){
                sec_largest = largest;
                largest = num;
            }else{
                
                sec_largest = Math.max(sec_largest, num);
            }    
        }
        return (largest-1)*(sec_largest-1);
    }
}
