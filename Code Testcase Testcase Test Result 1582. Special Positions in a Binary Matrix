
****************************************************************************************Python***********************************************************************************************

class Solution:
    def numSpecial(self, mat: List[List[int]]) -> int:
        result = 0
        m = len(mat)
        n = len(mat[0])

        row_count = [0]*m
        col_count = [0]*n

        for row in range(m):
            for col in range(n):
                if mat[row][col] == 1:
                    row_count[row] += 1;
                    col_count[col] += 1;

        for row in range(m):
            for col in range(n):
                if mat[row][col] == 1:
                    if row_count[row] == 1 and col_count[col] == 1:
                        result += 1;
            
        return result

****************************************************************************************JAVA***********************************************************************************************
class Solution {
    public int numSpecial(int[][] mat) {
        int result = 0;
        int m = mat.length;
        int n = mat[0].length;
        
        for (int row = 0; row < m; row++) {
            for (int col = 0; col < n; col++) {
                if (mat[row][col] == 0) {
                    continue;
                }
                
                boolean good = true;
                for (int r = 0; r < m; r++) {
                    if (r != row && mat[r][col] == 1) {
                        good = false;
                        break;
                    }
                }
                
                for (int c = 0; c < n; c++) {
                    if (c != col && mat[row][c] == 1) {
                        good = false;
                        break;
                    }
                }
                
                if (good) {
                    result++;
                }
            }
        }
        
        return result;
    }
}


//Approach-2(Storing count of 1s in rows and cols)
//T.C : O(m*n)
//S.C : O(m+n)
class Solution {
    public int numSpecial(int[][] mat) {
        int m = mat.length;
        int n = mat[0].length;
        int[] rowCount = new int[m];
        int[] colCount = new int[n];
        
        for (int row = 0; row < m; row++) {
            for (int col = 0; col < n; col++) {
                if (mat[row][col] == 1) {
                    rowCount[row]++;
                    colCount[col]++;
                }
            }
        }
        
        int result = 0;
        for (int row = 0; row < m; row++) {
            for (int col = 0; col < n; col++) {
                if (mat[row][col] == 1) {
                    if (rowCount[row] == 1 && colCount[col] == 1) {
                        result++;
                    }
                }
            }
        }
        
        return result;
    }
}
